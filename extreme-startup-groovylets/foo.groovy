// RTFM: http://groovy.codehaus.org/GroovletsString question = params.qSystem.err.println questionquestion = question.substring(question.indexOf(":") + 1).trim()//println "Hello $params"if (question =~ /which of the following numbers is the largest:/) {    def answer = question - "which of the following numbers is the largest:"    def result =  answer.split(",").max()    out(result)}if (question =~ /sssss/) {  // for further use ;-)}else if (question =~ /in the Fibonacci sequence/) {    //what is the 14th number in the Fibonacci sequence    def frage = (question - "what is the ") - " number in the Fibonacci sequence"    frage = frage.replaceAll("nd","")    frage =frage.replaceAll("st","")    frage =frage.replaceAll("rd","")    frage =frage.replaceAll("th","")    out (fib(Integer.valueOf(frage) - 1))} else if (question =~ /to the power of/) {    def first = question - "what is "    int num1 = Integer.valueOf(first.substring(0, first.indexOf(" ")).trim())    int num2 = Integer.valueOf(first.substring(first.lastIndexOf(" ")).trim())    out ( Math.pow(num1, num2).longValue())    } else if (question =~ /what is/)  {    def rechnung = question - "what is"    rechnung = rechnung.replaceAll("plus", "+")    rechnung = rechnung.replaceAll("minus", "-")    rechnung = rechnung.replaceAll("multiplied by", "*")    rechnung = rechnung.replaceAll("divided by", "/")    def result = Eval.me(rechnung)    out(result)}def fib(def num) {    Integer n = Integer.valueOf(num)    return n<2 ? 1 : fib(n-1)+fib(n-2)}if (question =~ /square and a cube/) {   def frage = question - "which of the following numbers is both a square and a cube: "   def numbers = frage.split(",").collect { it as Integer }    def result = numbers.collect { Integer it ->        if ((Math.sqrt(it).doubleValue() % 1 == 0) && (Math.cbrt(it).doubleValue() % 1 == 0)) {            it        }    }    out(removeNulls(result).join(","))}if (question =~ /who played James Bond in the film Dr No/) {    out "Sean Connery"}if (question =~ /who is the Prime Minister of Great Britain/) {    out "David Cameron"}if (question =~ /which of the following numbers are primes:/) {   def zahlen = (question -  "which of the following numbers are primes:").trim()    def ergebnis = zahlen.split(",").collect { def num  ->        if (isPrime(num))            num    }    out (removeNulls(ergebnis).join(","))}if (question =~ /what colour is a banana/) {    out ("yellow")}if (question =~ /which city is the Eiffel tower in/) {    out ("Paris")}def out(def str) {    System.err.println "---> $str"    println str}def isPrime(String num) {    new BigInteger(num.trim()).isProbablePrime(99)}def removeNulls(List arr) {    def newArr = []        arr.each { if (it != null) newArr << it }            newArr}